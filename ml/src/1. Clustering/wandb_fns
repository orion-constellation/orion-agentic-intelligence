import wandb
import os
from dotenv import load_dotenv
load_dotenv()
from sklearn.datasets import make_classification
from sklearn.preprocessing import StandardScaler
from sklearn.base import BaseEstimator, ClusterMixin
from sklearn.pipeline import Pipeline
from sklearn.metrics import silhouette_score, accuracy_score, f1_score, recall_score, precision_score
import matplotlib.pyplot as plt
from sklearn.utils.validation import check_is_fitted
from sklearn.utils import check_array
import math
import random

def create_dataset_artifact(name, job):
    """
Creates and returns the dataset and model artifacts associated with the given 'name' and 'job'.

Parameters:
    name (str): The name of the artifact.
    job (str): The type of job for the artifact.

Returns:
    run: The initialized W&B run.
    dataset_artifact: The dataset artifact created.
    model_artifact: The model artifact created.
"""
    run = wandb.init(project="d2i-sklearn-{random(randint(0,100))",job_type=job,name="Kev is a sicko")
    
    dataset_artifact = wandb.Artifact(name,type='dataset')
    model_artifact = wandb.Artifact(name, type="model")
    return run, dataset_artifact, model_artifact
    

def create_model_artifact(path,run, name):
    """
    Creates a model artifact with the specified 'path', associates it with the given 'run', and logs the artifact.

    Parameters:
        path (str): The path to the file for the model artifact.
        run: The initialized W&B run.
        name (str): The name of the artifact.

    Returns:
        None
    """

    artifact = wandb.Artifact(name,type='model')
    artifact.add_file(path)
    run.log_artifact(artifact)
    
def modeL_predict_eval(model, X_test, t_train, 
                       y_test, y_true, labels, X, Y) -> wandb.artefact:
    """
    Evaluates the model predictions against the true labels using various metrics.

    Parameters:
        model: The trained model for prediction.
        X_test: The input features for testing.
        t_train: The target variable for training.
        y_test: The true labels for testing.
        y_true: The true labels for evaluation.

    Returns:
        wandb.artefact: The evaluation artifact.
    """
    
    y_pred = model.predict(X_test)
    accuracy = sklearn.metrics.accuracy_score(y_true, y_pred)
    sil_score = sklearn.metrics.silhouette_score(y_true, y_pred)
    acc = sklearn.metrics.f1_score(y_true, y_pred)
    recall = sklearn.metrics.recall_score(y_true, y_pred)
    wandb.sklearn.plot_confusion_matrix(y_true, y_pred, labels)
    wandb.sklearn.plot_learning_curve(model, X, y)


